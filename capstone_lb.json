{"swagger":"2.0","info":{"version":"1.0.0","title":"capstone_lb"},"basePath":"/api","paths":{"/Users/{id}/accessTokens/{fk}":{"get":{"tags":["User"],"summary":"Find a related item by id for accessTokens.","operationId":"User.prototype.__findById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a related item by id for accessTokens.","operationId":"User.prototype.__destroyById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["User"],"summary":"Update a related item by id for accessTokens.","operationId":"User.prototype.__updateById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false}},"/Users/{id}/accessTokens":{"get":{"tags":["User"],"summary":"Queries accessTokens of User.","operationId":"User.prototype.__get__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessToken"}}}},"deprecated":false},"post":{"tags":["User"],"summary":"Creates a new instance in accessTokens of this model.","operationId":"User.prototype.__create__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Deletes all accessTokens of this model.","operationId":"User.prototype.__delete__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/accessTokens/count":{"get":{"tags":["User"],"summary":"Counts accessTokens of User.","operationId":"User.prototype.__count__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users":{"post":{"tags":["User"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"User.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"User.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate__put_Users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"User.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}},"deprecated":false}},"/Users/replaceOrCreate":{"post":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate__post_Users_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/upsertWithWhere":{"post":{"tags":["User"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"User.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/exists":{"get":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__get_Users_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Users/{id}":{"head":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__head_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"User.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById__put_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"User.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"User.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/replace":{"post":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById__post_Users_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/findOne":{"get":{"tags":["User"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"User.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/update":{"post":{"tags":["User"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"User.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Users/count":{"get":{"tags":["User"],"summary":"Count instances of the model matched by where from the data source.","operationId":"User.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users/change-stream":{"post":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__post_Users_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__get_Users_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Users/login":{"post":{"tags":["User"],"summary":"Login a user with username/email and password.","operationId":"User.login","parameters":[{"name":"credentials","in":"body","required":true,"schema":{"type":"object"}},{"name":"include","in":"query","description":"Related objects to include in the response. See the description of return value for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n  - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n\n","type":"object"}}},"deprecated":false}},"/Users/logout":{"post":{"tags":["User"],"summary":"Logout a user with access token.","operationId":"User.logout","parameters":[],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/verify":{"post":{"tags":["User"],"summary":"Trigger user's identity verification with configured verifyOptions","operationId":"User.prototype.verify","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/confirm":{"get":{"tags":["User"],"summary":"Confirm a user registration with identity verification token.","operationId":"User.confirm","parameters":[{"name":"uid","in":"query","required":true,"type":"string"},{"name":"token","in":"query","required":true,"type":"string"},{"name":"redirect","in":"query","required":false,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/reset":{"post":{"tags":["User"],"summary":"Reset password for a user with email.","operationId":"User.resetPassword","parameters":[{"name":"options","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/change-password":{"post":{"tags":["User"],"summary":"Change a user's password.","operationId":"User.changePassword","parameters":[{"name":"oldPassword","in":"formData","required":true,"type":"string"},{"name":"newPassword","in":"formData","required":true,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/reset-password":{"post":{"tags":["User"],"summary":"Reset user's password via a password-reset token.","operationId":"User.setPassword","parameters":[{"name":"newPassword","in":"formData","required":true,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/APIs":{"post":{"tags":["API"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"API.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/API"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false},"patch":{"tags":["API"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"API.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/API"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false},"put":{"tags":["API"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"API.replaceOrCreate__put_APIs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/API"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false},"get":{"tags":["API"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"API.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/API"}}}},"deprecated":false}},"/APIs/replaceOrCreate":{"post":{"tags":["API"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"API.replaceOrCreate__post_APIs_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/API"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false}},"/APIs/upsertWithWhere":{"post":{"tags":["API"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"API.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/API"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false}},"/APIs/{id}/exists":{"get":{"tags":["API"],"summary":"Check whether a model instance exists in the data source.","operationId":"API.exists__get_APIs_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/APIs/{id}":{"head":{"tags":["API"],"summary":"Check whether a model instance exists in the data source.","operationId":"API.exists__head_APIs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["API"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"API.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false},"put":{"tags":["API"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"API.replaceById__put_APIs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/API"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false},"delete":{"tags":["API"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"API.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["API"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"API.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"API id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/API"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false}},"/APIs/{id}/replace":{"post":{"tags":["API"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"API.replaceById__post_APIs_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/API"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false}},"/APIs/findOne":{"get":{"tags":["API"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"API.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false}},"/APIs/update":{"post":{"tags":["API"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"API.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/API"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/APIs/count":{"get":{"tags":["API"],"summary":"Count instances of the model matched by where from the data source.","operationId":"API.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/APIs/change-stream":{"post":{"tags":["API"],"summary":"Create a change stream.","operationId":"API.createChangeStream__post_APIs_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["API"],"summary":"Create a change stream.","operationId":"API.createChangeStream__get_APIs_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Widgets/{id}/user_":{"get":{"tags":["Widget"],"summary":"Fetches belongsTo relation user_.","operationId":"Widget.prototype.__get__user_","parameters":[{"name":"id","in":"path","description":"Widget id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Widgets/{id}/api_":{"get":{"tags":["Widget"],"summary":"Fetches belongsTo relation api_.","operationId":"Widget.prototype.__get__api_","parameters":[{"name":"id","in":"path","description":"Widget id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/API"}}},"deprecated":false}},"/Widgets":{"post":{"tags":["Widget"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Widget.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Widget"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false},"patch":{"tags":["Widget"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Widget.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Widget"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false},"put":{"tags":["Widget"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Widget.replaceOrCreate__put_Widgets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Widget"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false},"get":{"tags":["Widget"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Widget.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Widget"}}}},"deprecated":false}},"/Widgets/replaceOrCreate":{"post":{"tags":["Widget"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Widget.replaceOrCreate__post_Widgets_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Widget"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false}},"/Widgets/upsertWithWhere":{"post":{"tags":["Widget"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Widget.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Widget"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false}},"/Widgets/{id}/exists":{"get":{"tags":["Widget"],"summary":"Check whether a model instance exists in the data source.","operationId":"Widget.exists__get_Widgets_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Widgets/{id}":{"head":{"tags":["Widget"],"summary":"Check whether a model instance exists in the data source.","operationId":"Widget.exists__head_Widgets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Widget"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Widget.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false},"put":{"tags":["Widget"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Widget.replaceById__put_Widgets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Widget"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false},"delete":{"tags":["Widget"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Widget.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Widget"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Widget.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Widget id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Widget"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false}},"/Widgets/{id}/replace":{"post":{"tags":["Widget"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Widget.replaceById__post_Widgets_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Widget"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false}},"/Widgets/findOne":{"get":{"tags":["Widget"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Widget.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Widget"}}},"deprecated":false}},"/Widgets/update":{"post":{"tags":["Widget"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Widget.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Widget"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Widgets/count":{"get":{"tags":["Widget"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Widget.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Widgets/change-stream":{"post":{"tags":["Widget"],"summary":"Create a change stream.","operationId":"Widget.createChangeStream__post_Widgets_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Widget"],"summary":"Create a change stream.","operationId":"Widget.createChangeStream__get_Widgets_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}}},"tags":[{"name":"User"},{"name":"API"},{"name":"Widget"}],"consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"definitions":{"x-any":{"properties":{}},"AccessToken":{"properties":{"id":{"type":"string"},"ttl":{"default":1209600,"description":"time to live in seconds (2 weeks by default)","type":"number","format":"double"},"scopes":{"description":"Array of scopes granted to this access token.","type":"array","items":{"type":"string"}},"created":{"type":"string","format":"date-time"},"userId":{"type":"number","format":"double"}},"required":["id"],"additionalProperties":false},"User":{"properties":{"realm":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"type":"number","format":"double"}},"required":["email"],"additionalProperties":false},"API":{"properties":{"name":{"type":"string"},"base_url":{"type":"string"},"app_key_name":{"type":"string"},"app_key_value":{"type":"string"},"config_1_key":{"type":"string"},"config_1_value":{"type":"string"},"config_2_key":{"type":"string"},"config_2_value":{"type":"string"},"config_3_key":{"type":"string"},"config_3_value":{"type":"string"},"instance_1_key":{"type":"string"},"instance_2_key":{"type":"string"},"instance_3_key":{"type":"string"},"request_format":{"default":"json","type":"string"},"component_file_path":{"type":"string"},"id":{"type":"number","format":"double"}},"required":["name","base_url","component_file_path"],"additionalProperties":false},"Widget":{"properties":{"instance_1_value":{"type":"string"},"instance_2_value":{"type":"string"},"instance_3_value":{"type":"string"},"id":{"type":"number","format":"double"},"user_Id":{"type":"number","format":"double"},"api_Id":{"type":"number","format":"double"}},"additionalProperties":false}}}